{
	"name": "MovieDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesDBSource",
						"type": "DatasetReference"
					},
					"name": "Movies1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "Movies2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MoviesBellow6CSV",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				}
			],
			"script": "\n\nsource(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Movies1\nsource(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Movies2\nMovies1, Movies2 join(Movies1@movie == Movies2@movie,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MoviesJoinData'],\n\tmapColumn(\n\t\tmovie_1 = Movies1@movie,\n\t\tmovie_2 = Movies2@movie,\n\t\ttitle = Movies2@title,\n\t\tgenres = Movies2@genres,\n\t\tyear = Movies2@year,\n\t\tRating = Movies2@Rating,\n\t\t{Rotton Tomato} = Movies2@{Rotton Tomato}\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}